# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h_h7RmZC20PoA9R1HNLs6sUjzfJsprtn
"""

import pandas as pd

import numpy as np

"""df=pd.read_csv(r'https://rawgithubusercontent.com/YBIFoundation/Dataset/blob/main/Movies%20Recommendation.csv')"""

df=pd.read_csv(r'https://raw.githubusercontent.com/YBIFoundation/Dataset/blob/main/Movies%20Recommendation.csv')

df=pd.read_csv('https://github.com/YBIFoundation/Dataset/raw/main/Movies%20Recommendation.csv')

df.head()

df.info()

df.shape

df.columns

df_features=df[['Movie_genre','movie_keywords','Movie_Tagline','Movie_cast','Movie_director']].fillna('')

df_features=df[['Movie_Genre','Movie_Keywords','Movie_Tagline','Movie_Cast','Movie_Director']].fillna('')

df_features.shape

df_features

x=df_features['Movie_Genre']+ ' '+ df_features['Movie_Keywords']+' '+df_features['Movie_Tagline']+ ' '+ df_features['Movie_Cast']+ ' ' + df_features['Movie_Director']

x.shape

from sklearn.feature_extraction.text import TfidfVectorizer

tfidf=TfidfVectorizer()

x=tfidf.fit_transform(x)

x.shape

print(x)

from sklearn.metrics.pairwise import cosine_similarity

similiarity_score=cosine_similarity(x)

similiarity_score

similiarity_score.shape

Favourite_Movie_name=input('enter your fav movie name:  ')

all_movies_title_list=df ['Movie_Title'].tolist()

import difflib

Movie_Recommendation=difflib.get_close_matches(Favourite_Movie_name,all_movies_title_list)
print(Movie_Recommendation)

Close_Match=Movie_Recommendation[0]
print(Close_Match)

Index_of_Close_Match_Movie=df[df.Movie_Title==Close_Match]['Movie_ID'].values[0]
print(Index_of_Close_Match_Movie)

Recommendation_Score=list(enumerate(similiarity_score[Index_of_Close_Match_Movie]))
print(Recommendation_Score)

len(Recommendation_Score)

Sorted_Similiar_Movies=sorted(Recommendation_Score,key=lambda x:x[1],reverse=True)
print(Sorted_Similiar_Movies)

print('top 30 movies suggested for you: \n')
i=1
for movie in Sorted_Similiar_Movies:
  index=movie[0]
  title_from_index=df[df.index==index]['Movie_Title'].values[0]
  if(i<31):
    print(i,'.',title_from_index)
    i+=1

from os import close
Movie_Name=input('enter your fav movie name:  ')
list_of_all_titles=df['Movie_Title'].tolist()
find_close_match=difflib.get_close_matches(Movie_Name,list_of_all_titles)
close_match=find_close_match[0]
index_of_movie=df[df.Movie_Title==close_match]['Movie_ID'].values[0]
Recommendation_Score=list(enumerate(similiarity_score[index_of_movie]))
sorted_similar_movies=sorted(Recommendation_Score,key=lambda x:x[1],reverse=True)
print('top 30 movies suggested for you: \n')
i=1
for movie in sorted_similar_movies:
  index=movie[0]
  title_from_index=df[df.index==index]['Movie_Title'].values
  if(i<31):
    print(i,'.',title_from_index)
    i+=1